package com.bukkit.dallen6.survivalgamesautomated;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.GameMode;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.Event;
import org.bukkit.plugin.PluginManager;
import org.bukkit.plugin.java.JavaPlugin;

import com.sk89q.worldedit.Vector;
import com.sk89q.worldedit.bukkit.WorldEditPlugin;
import com.sk89q.worldedit.bukkit.selections.CuboidSelection;
import com.sk89q.worldedit.bukkit.selections.Selection;

import java.io.File;
import java.io.IOException;
import java.util.logging.Logger;

@SuppressWarnings("unused")
public class Main extends JavaPlugin{
	private SGPlayerListener PlayerListener = new SGPlayerListener(this);

	String tempname;
	public boolean gameHasStarted = false;
	private int joinedPlayers = 0;
	private Location l1;
	private Location l2;
	private Location l3;
	private Location l4;
	private Location l5;
	private Location l6;
	private Location l7;
	private Location l8;
	private boolean used1 = false;
	private boolean used2 = false;
	private boolean used3 = false;
	private boolean used4 = false;
	private boolean used5 = false;
	private boolean used6 = false;
	private boolean used7 = false;
	private boolean used8 = false;
	
	
	
	private static final Logger log = Logger.getLogger("Minecraft");
	static String maindirectory = "SurvivalGamesAutomated/"; 
	
	static File stats = new File(maindirectory + "Users.accounts");
@Override
public void onEnable(){
	new File(maindirectory).mkdir();
	if(!stats.exists()){
		try {
			stats.createNewFile();
		} catch (IOException e) {
			
			e.printStackTrace();
		}
		LoadSettings.loadMain();
	}
	PluginManager pm = getServer().getPluginManager();
	pm.registerEvents(this.PlayerListener, this);
	
	log.info("SurvivalGamesAutomated Enabled Sucessfully!");
}

@Override
public void onDisable(){
	log.info("SurvivalGamesAutomated Disabled!");





	
                 
		
		
	

		}


public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args){
	
	if(cmd.getName().equalsIgnoreCase("sga")){ 
		Player player = (Player)sender;
		 if(args.length == 1 && args[0].equalsIgnoreCase("join")){
         	player.setGameMode(GameMode.ADVENTURE);
         	player.sendMessage(ChatColor.GOLD + "During the beta release, you cannot break blocks!");
				joinedPlayers =+ 1;
				 tempname = player.getName();
				 
				if(used1 == false){
					player.teleport(l1);
					used1 = true;
				}else if(used2 == false){
					player.teleport(l2);
					used2 = true;
				}else if(used3 == false){
					player.teleport(l3);
					used3 = true;
				}else if(used4 == false){
					player.teleport(l4);
					used4 = true;
				}else if(used5 == false){
					player.teleport(l5);
					used5 = true;
				}else if(used6 == false){
					player.teleport(l6);
					used6 = true;
				}else if(used7 == false){
					player.teleport(l7);
					used7 = true;
				}else if(used8 == false){
					player.teleport(l8);
					used8 = true;
				}else {
					player.sendMessage(ChatColor.GREEN + "Sorry, we're out of join slots!");
				}
		 }
		else if(args.length == 1 && args[0].equalsIgnoreCase("help")){
			Location[] Spawns = new Location[20];
		
			sender.sendMessage(ChatColor.GREEN + "Use /sga setspawn 1                                       " +
					"/sga setspawn 2                     " +
					"/sga setspawn 3                                                               " +
					"/sga setspawn 4                                                               " +
					"etc. Until you have 8 spawns                                                   " +
					"Then you're ready! Have players do /sga join");
			}else if(args.length == 0){
		sender.sendMessage(ChatColor.GREEN + "Designed By: Dallen6 and Omega221, Do /sga help for commands!");
			}
		else if (args.length == 2) {
            if (args[0].equalsIgnoreCase("setspawn")) {
                if (args[1].equalsIgnoreCase("1")) {
                    //Do something, perhaps send them a message?
                	 l1 = player.getLocation();
                	sender.sendMessage(ChatColor.GREEN + "Spawn 1 Set!");
                  return true;
                }else if(args[1].equalsIgnoreCase("2")){
                	 sender.sendMessage(ChatColor.GREEN + "Spawn 2 Set!");
                	 l2 = player.getLocation();
                	return true;
                }else if(args[1].equalsIgnoreCase("3")){
                	sender.sendMessage(ChatColor.GREEN + "Spawn 3 Set!");
                	l3 = player.getLocation();
                	return true;
                }else if(args[1].equalsIgnoreCase("4")){
               	 sender.sendMessage(ChatColor.GREEN + "Spawn 4 Set!");
               	 l4 = player.getLocation();
               	 return true;
                }
                else if(args[1].equalsIgnoreCase("5")){
               	 sender.sendMessage(ChatColor.GREEN + "Spawn 5 Set!");
               	 l5 = player.getLocation();
               	 return true;
                }
                else if(args[1].equalsIgnoreCase("6")){
               	 sender.sendMessage(ChatColor.GREEN + "Spawn 6 Set!");
               	 l6 = player.getLocation();
               	 return true;
                }
                else if(args[1].equalsIgnoreCase("7")){
               	 sender.sendMessage(ChatColor.GREEN + "Spawn 7 Set!");
               	l7 = player.getLocation();
               	 
                return true;
                }
               
					else if(used7 == true){
						player.sendMessage(ChatColor.RED + "Sorry!  All spawns full!");
					}
					
					return true;
					
					
					
					
                	
                }
                else if(args[1].equalsIgnoreCase("8")){
               	 sender.sendMessage(ChatColor.GREEN + "Spawn 8 Set!");
               	 l8 = player.getLocation();
               	 
               	 return true;
            }
        }
    


	



	
	
	
	



}
	return false; 	
}


}




